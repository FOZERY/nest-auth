services:
    api:
        build:
            context: ../
            dockerfile: docker/nestjs/Dockerfile
        container_name: nestjs-api-prod
        ports:
            - "${APP_PORT}:3000"
        environment:
            NODE_ENV: production
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
            JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
            REFRESH_EXPIRED_IN: ${REFRESH_EXPIRED_IN}
            ACCESS_EXPIRED_IN: ${REFRESH_EXPIRED_IN}
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
        depends_on:
            - postgres
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1G

    postgres:
        container_name: postgres-prod
        image: postgres:16
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres-data-prod:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1G

    redis:
        container_name: redis-prod
        image: redis:7-alpine
        restart: unless-stopped
        ports:
            - "${REDIS_PORT}:6379"
        command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M
                reservations:
                    cpus: "0.25"
                    memory: 256M
        volumes:
            - cache-prod:/data

    minio:
        container_name: minio-prod
        image: minio/minio:latest
        command: server --console-address ":9001" /data
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio-storage-prod:/data
            - minio-config-prod:/root/.minio
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    postgres-data-prod:
    minio-storage-prod:
    minio-config-prod:
    cache-prod:

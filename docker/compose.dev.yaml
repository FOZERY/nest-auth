services:
    postgres:
        container_name: postgres-dev
        image: postgres:16
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres-data-dev:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1G

    redis:
        container_name: redis-dev
        image: redis:7-alpine
        restart: unless-stopped
        ports:
            - "${REDIS_PORT}:6379"
        command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M
                reservations:
                    cpus: "0.25"
                    memory: 256M
        volumes:
            - cache:/data

    minio:
        container_name: minio-dev
        image: minio/minio:latest
        command: server --console-address ":9001" /data
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio-storage:/data
            - minio-config:/root/.minio
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    postgres-data-dev:
    minio-storage:
    minio-config:
    cache:
